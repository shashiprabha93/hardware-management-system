/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.forms.Rental;

import Controller.CustomerController;
import Controller.ProductController;
import Controller.RentalController;
import application.entity.Customer;
import application.entity.Payment;
import application.entity.Product;
import application.entity.Rental;
import application.entity.RentalDetails;
import application.forms.Customer.CustomerAdd;
import hardwaremanagement.ComboSearch;
import hardwaremanagement.NumbeFormater;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Shashiprabha-PC
 */
public class RentalAdd extends javax.swing.JDialog {

    private DefaultComboBoxModel comboBoxModelCustomer;
    private final ComboSearch cs;
    private RentalView rentalView;

    private CustomerController customerController;
    private RentalController rentalController;
    private ProductController productController = null;

    private DefaultTableModel tableModelRentalAdd, tableModelRentalRemove;
    private TableColumnModel tcmRentalAdd, tcmRentalRemove;
    private TableColumn colProductIdAdd, colProductIdRemove;
    private ArrayList<String> productList;

    public RentalAdd(java.awt.Frame parent, boolean modal, RentalView rentalView) {

        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);

        customerController = new CustomerController();
        rentalController = new RentalController();
        
        comboBoxModelCustomer = (DefaultComboBoxModel) cmbCustomer.getModel();
        customerController.getAllCustomerForCombo(comboBoxModelCustomer);
        cs = new ComboSearch<Customer>();
        cs.setSearchableCombo(cmbCustomer, true, "No matching result");
        cmbCustomer.getEditor().selectAll();

        productController = new ProductController();
        tableModelRentalAdd = (DefaultTableModel) tblRentalAdd.getModel();
        tableModelRentalRemove = (DefaultTableModel) tblRentalRemove.getModel();
        productController.getAllProducts(tableModelRentalAdd);

        productList = new ArrayList<String>();
        tcmRentalAdd = tblRentalAdd.getColumnModel();
        colProductIdAdd = tcmRentalAdd.getColumn(0);
        tcmRentalAdd.removeColumn(colProductIdAdd);

        tcmRentalRemove = tblRentalRemove.getColumnModel();
        colProductIdRemove = tcmRentalRemove.getColumn(0);
        tcmRentalRemove.removeColumn(colProductIdRemove);

        tableModelRentalRemove.addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                calculateTotal();
                calculateBalance();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cmbCustomer = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRentalAdd = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtQuntity = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRentalRemove = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        datePickerCheckout = new com.toedter.calendar.JDateChooser();
        btnSave = new javax.swing.JButton();
        btnCustomerAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        txtPaidAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rental Add");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Customer ");
        jLabel9.setPreferredSize(new java.awt.Dimension(97, 14));

        cmbCustomer.setPreferredSize(new java.awt.Dimension(123, 20));
        cmbCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerActionPerformed(evt);
            }
        });

        jLabel10.setText("search ");

        txtSearch.setPreferredSize(new java.awt.Dimension(123, 20));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Rental"));
        jPanel3.setPreferredSize(new java.awt.Dimension(852, 279));

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(110, 38));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblRentalAdd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product Name", "Product Type", "Unit Price (Rs)"
            }
        ));
        tblRentalAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRentalAddMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRentalAdd);

        jLabel1.setText("Quntity ");

        txtQuntity.setText("0");
        txtQuntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuntityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuntity, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 550, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtQuntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove Rental"));
        jPanel4.setPreferredSize(new java.awt.Dimension(852, 279));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        tblRentalRemove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product Name", "Product Type", "Unit Price (Rs)", "qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRentalRemove);

        btnRemove.setBackground(new java.awt.Color(255, 255, 255));
        btnRemove.setText("Remove Item");
        btnRemove.setPreferredSize(new java.awt.Dimension(110, 38));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel2.setText("checkOut");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(datePickerCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datePickerCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(110, 38));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCustomerAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnCustomerAdd.setText("New Customer");
        btnCustomerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerAddActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Price");

        jLabel4.setText("Paid Amount");

        jLabel5.setText("Balance");

        txtPaidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidAmountActionPerformed(evt);
            }
        });
        txtPaidAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaidAmountKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(btnCustomerAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 927, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCustomerAdd))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void datePicIssueDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datePicIssueDateKeyPressed

    }//GEN-LAST:event_datePicIssueDateKeyPressed

    private void datePicIssueDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datePicIssueDateKeyReleased

    }//GEN-LAST:event_datePicIssueDateKeyReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (tblRentalAdd.getSelectedRow() > -1) {

            int selectedRow = tblRentalAdd.convertRowIndexToModel(tblRentalAdd.getSelectedRow());
            if (!NumbeFormater.isNumeric(txtQuntity.getText())) {
                JOptionPane.showMessageDialog(this, "Invalid Quntity.", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (Integer.parseInt(txtQuntity.getText()) < 1 && txtQuntity.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be Zero (0).", "Warning Message", JOptionPane.WARNING_MESSAGE);

            } else if (productList.contains(tableModelRentalAdd.getValueAt(selectedRow, 0).toString())) {
                JOptionPane.showMessageDialog(this, "Product already Added.", "Error Message", JOptionPane.ERROR_MESSAGE);

            } else {

                int productId = Integer.valueOf(tableModelRentalAdd.getValueAt(selectedRow, 0).toString());
                String productName = tableModelRentalAdd.getValueAt(selectedRow, 1).toString();
                String productType = tableModelRentalAdd.getValueAt(selectedRow, 2).toString();
                double buyingPrice = NumbeFormater.formatCleanString(tableModelRentalAdd.getValueAt(selectedRow, 3).toString());
                int qty = Integer.valueOf(txtQuntity.getText());

                productList.add(tableModelRentalAdd.getValueAt(selectedRow, 0).toString());
                tableModelRentalRemove.addRow(new Object[]{productId, productName, productType, NumbeFormater.formatDoubleToDecimal(buyingPrice), qty});

                txtQuntity.setText("0");
                tblRentalAdd.clearSelection();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a Rental Product.", "Error Message", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = tblRentalRemove.getSelectedRow();
        if (selectedRow > -1) {
            productList.remove(tableModelRentalRemove.getValueAt(selectedRow, 0).toString());
            tableModelRentalRemove.removeRow(tblRentalRemove.getSelectedRow());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a row.", "Warning Message", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (tblRentalRemove.getRowCount() > 0) {

            if (cmbCustomer.getSelectedItem() instanceof Customer) {

                if (datePickerCheckout.getDate() != null) {

                    Date date = new Date();
                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY-MM-dd");
                    Date fromDate = datePickerCheckout.getDate();

                    Rental rental = new Rental();
                    rental.setCustomerRef((Customer) cmbCustomer.getSelectedItem());
                    rental.setRentalCheckin(date);
                    rental.setRentalCheckout(fromDate);
                    rental.setUpdatedAt(date);
                    rental.setCreatedAt(date);
                    rental.setStatus(true);

                    List<RentalDetails> rentalDetails = new ArrayList<RentalDetails>();

                    for (int i = 0; i < tableModelRentalRemove.getRowCount(); i++) {

                        Product product = new Product();
                        product.setProductId(Integer.parseInt(tableModelRentalRemove.getValueAt(i, 0).toString()));

                        RentalDetails rental_Details = new RentalDetails();

                        rental_Details.setProductRef(product);
                        rental_Details.setQty(Integer.parseInt(tableModelRentalRemove.getValueAt(i, 4).toString()));
                        rental_Details.setCreatedAt(date);
                        rental_Details.setUpdatedAt(date);
                        rental_Details.setStatus(true);
                        rentalDetails.add(rental_Details);
                        rental.setRentalDetailsList(rentalDetails);

                    }

                    Payment payment = new Payment();
                    payment.setTotalAmount(NumbeFormater.formatCleanString(lblTotal.getText()));
                    payment.setPaidAmount(Double.parseDouble(txtPaidAmount.getText()));
                    payment.setBalance(NumbeFormater.formatCleanString(lblBalance.getText()));
                    payment.setCreatedAt(date);
                    payment.setUpdatedAt(date);
                    payment.setStatus(true);
                    rental.setPaymentRef(payment);

                    boolean status = rentalController.saveRentalDetais(rental);
                    if (status) {
                        JOptionPane.showMessageDialog(this, "RENTAl added successfully.", "Success Message", JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                        //rentalController.getAllRental(rentalView.modelRentalView);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error in adding RENTAL.", "Error Message", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                     JOptionPane.showMessageDialog(null, "Please set date range correctly...!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Customer.", "Warning Message", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "RENTAL must has at least one product.", "Warning Message", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableModelRentalAdd);
        tblRentalAdd.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtSearch.getText()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnCustomerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerAddActionPerformed
        CustomerAdd customerAdd = new CustomerAdd(this, rootPaneCheckingEnabled, null);
        customerAdd.setVisible(true);
        customerController.getAllCustomerForCombo(comboBoxModelCustomer);
    }//GEN-LAST:event_btnCustomerAddActionPerformed

    private void tblRentalAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRentalAddMouseClicked
        //calculateTotal();
    }//GEN-LAST:event_tblRentalAddMouseClicked

    private void txtPaidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidAmountActionPerformed

    }//GEN-LAST:event_txtPaidAmountActionPerformed

    private void txtPaidAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidAmountKeyReleased
        calculateBalance();
    }//GEN-LAST:event_txtPaidAmountKeyReleased

    private void txtQuntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuntityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuntityActionPerformed

    private void cmbCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentalAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentalAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentalAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentalAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RentalAdd dialog = new RentalAdd(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCustomerAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbCustomer;
    private com.toedter.calendar.JDateChooser datePickerCheckout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblRentalAdd;
    private javax.swing.JTable tblRentalRemove;
    private javax.swing.JTextField txtPaidAmount;
    private javax.swing.JTextField txtQuntity;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private double calculateTotal() {

        double totalAmount = 0;
        for (int i = 0; i < tableModelRentalRemove.getRowCount(); i++) {
            double Qty = NumbeFormater.formatCleanString(tableModelRentalRemove.getValueAt(i, 4).toString());
            double unitPrice = NumbeFormater.formatCleanString(tableModelRentalRemove.getValueAt(i, 3).toString());
            totalAmount += unitPrice * Qty;

        }
        lblTotal.setText(NumbeFormater.formatDoubleToDecimal(totalAmount));
        return totalAmount;
    }

    private double calculateBalance() {
        double totBalance = 0;
        double paidAmount = 0;
        double total = NumbeFormater.formatCleanString(lblTotal.getText());
        if (!txtPaidAmount.getText().isEmpty()) {
            paidAmount = Double.parseDouble(txtPaidAmount.getText());
        }
//        else if (total > paidAmount) {
//            JOptionPane.showMessageDialog(this, "RENTAL must has at least one product.", "Warning Message", JOptionPane.WARNING_MESSAGE);
//        }

        double balance = paidAmount - total;
        lblBalance.setText(NumbeFormater.formatDoubleToDecimal(balance));

        return totBalance;
    }

}
