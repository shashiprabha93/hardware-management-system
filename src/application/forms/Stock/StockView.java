/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.forms.Stock;

import Controller.ProductController;
import Controller.RepairController;
import Controller.StockController;
import application.entity.Product;
import application.entity.Repair;
import application.entity.Supplier;
import application.forms.Product.ProductAdd;
import application.forms.Product.ProductUpdate;
import application.forms.Repair.RepairAdd;
import application.forms.Repair.RepairUpdate;
import application.forms.Stock.StockUpdate;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import application.entity.Stock;
import hardwaremanagement.ComboSearch;
import javax.swing.DefaultComboBoxModel;
import Controller.SupplierController;
/**
 *
 * @author DELL
 */
public class StockView extends javax.swing.JDialog {

    /**
     * Creates new form StockView
     */
    public DefaultTableModel modelRepair;
    private RepairController repairController = null;
    private TableColumnModel tcmRepair;
    private TableColumn colRepairId;
    private TableColumnModel columnModelr;

    public DefaultTableModel modelStock;
    private StockController stockController = null;
    private TableColumnModel tcmStock;
    private TableColumn colStockId;
    private TableColumnModel columnModels;

    public DefaultTableModel modelProduct;
    private ProductController productController = null;
    private TableColumnModel tcmProduct;
    private TableColumn colProductId;
    private TableColumnModel columnModelp;
    private Product product;

    public StockView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);

        columnModelr = tblRepair.getColumnModel();
        modelRepair = (DefaultTableModel) tblRepair.getModel();
        repairController = new RepairController();
        repairController.getAllRepair(modelRepair);
        tcmRepair = tblRepair.getColumnModel();
        //colRepairId = tcmRepair.getColumn(1);
        //tcmRepair.removeColumn(colRepairId);
        checkBtnRepair();
        txtRepairSearch.requestFocus();

        columnModels = tblStock.getColumnModel();
        modelStock = (DefaultTableModel) tblStock.getModel();
        stockController = new StockController();
        stockController.getAllStock(modelStock);
        tcmStock = tblRepair.getColumnModel();
        //colStockId = tcmStock.getColumn(0);
       // tcmStock.removeColumn(colStockId);
        checkBtnStock();
        txtStockSearch.requestFocus();

        columnModelp = tblProduct.getColumnModel();
        modelProduct = (DefaultTableModel) tblProduct.getModel();
        productController = new ProductController();
        productController.getAllProducts(modelProduct);
        tcmProduct = tblRepair.getColumnModel();
        colProductId = tcmProduct.getColumn(0);
        tcmProduct.removeColumn(colProductId);
        checkBtnProduct();
        txtRepairSearch.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tabPaneStock = new javax.swing.JTabbedPane();
        panlProduct = new javax.swing.JPanel();
        txtProductSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        productTablePane = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnProductAdd = new javax.swing.JButton();
        btnProductUpdate = new javax.swing.JButton();
        btnProductDelete = new javax.swing.JButton();
        panlRepair = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtRepairSearch = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRepair = new javax.swing.JTable();
        btnAddRepair = new javax.swing.JButton();
        btnRepairUpdate = new javax.swing.JButton();
        btnRepairDelete = new javax.swing.JButton();
        panlStock = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtStockSearch = new javax.swing.JTextField();
        btnAddStock = new javax.swing.JButton();
        btnUpdateStock = new javax.swing.JButton();
        btnDeleteStock = new javax.swing.JButton();
        stocktblpane = new javax.swing.JScrollPane();
        tblStock = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Product - Repair - Stock View");

        tabPaneStock.setPreferredSize(new java.awt.Dimension(1168, 502));

        panlProduct.setBackground(new java.awt.Color(255, 255, 255));
        panlProduct.setPreferredSize(new java.awt.Dimension(700, 462));

        txtProductSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Search ");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Supplier", "Product Name", "Type", "Price"
            }
        ));
        tblProduct.setMinimumSize(new java.awt.Dimension(90, 64));
        tblProduct.setPreferredSize(new java.awt.Dimension(450, 64));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        productTablePane.setViewportView(tblProduct);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productTablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnProductAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnProductAdd.setText("Add");
        btnProductAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductAddActionPerformed(evt);
            }
        });

        btnProductUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnProductUpdate.setText("Update");
        btnProductUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductUpdateActionPerformed(evt);
            }
        });

        btnProductDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnProductDelete.setText("Delete");
        btnProductDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panlProductLayout = new javax.swing.GroupLayout(panlProduct);
        panlProduct.setLayout(panlProductLayout);
        panlProductLayout.setHorizontalGroup(
            panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlProductLayout.createSequentialGroup()
                .addGroup(panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panlProductLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panlProductLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtProductSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panlProductLayout.createSequentialGroup()
                        .addGap(607, 607, 607)
                        .addComponent(btnProductAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnProductUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProductDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panlProductLayout.setVerticalGroup(
            panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlProductLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProductSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panlProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProductDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProductUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProductAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPaneStock.addTab("Product", panlProduct);

        panlRepair.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Search ");

        txtRepairSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRepairSearchKeyReleased(evt);
            }
        });

        tblRepair.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Repair Id", "Name", "Phone", "Date of Submission", "Due Date", "Notes"
            }
        ));
        tblRepair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRepairMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblRepair);

        btnAddRepair.setBackground(new java.awt.Color(255, 255, 255));
        btnAddRepair.setText("Add");
        btnAddRepair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRepairActionPerformed(evt);
            }
        });

        btnRepairUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnRepairUpdate.setText("Update");
        btnRepairUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepairUpdateActionPerformed(evt);
            }
        });

        btnRepairDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnRepairDelete.setText("Delete");
        btnRepairDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepairDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panlRepairLayout = new javax.swing.GroupLayout(panlRepair);
        panlRepair.setLayout(panlRepairLayout);
        panlRepairLayout.setHorizontalGroup(
            panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlRepairLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panlRepairLayout.createSequentialGroup()
                        .addComponent(btnAddRepair, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnRepairUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnRepairDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panlRepairLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(txtRepairSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        panlRepairLayout.setVerticalGroup(
            panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlRepairLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRepairSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panlRepairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRepairDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRepairUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddRepair, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        tabPaneStock.addTab("Repair", panlRepair);

        panlStock.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Search");

        txtStockSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStockSearchKeyReleased(evt);
            }
        });

        btnAddStock.setBackground(new java.awt.Color(255, 255, 255));
        btnAddStock.setText("Add");
        btnAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStockActionPerformed(evt);
            }
        });

        btnUpdateStock.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdateStock.setText("Update");
        btnUpdateStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStockActionPerformed(evt);
            }
        });

        btnDeleteStock.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteStock.setText("Delete");
        btnDeleteStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStockActionPerformed(evt);
            }
        });

        tblStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Stock Id", "Product Id", "Product Name", "Quantity", "MRP", "Discount"
            }
        ));
        tblStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStockMouseClicked(evt);
            }
        });
        stocktblpane.setViewportView(tblStock);

        javax.swing.GroupLayout panlStockLayout = new javax.swing.GroupLayout(panlStock);
        panlStock.setLayout(panlStockLayout);
        panlStockLayout.setHorizontalGroup(
            panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlStockLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panlStockLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(txtStockSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(stocktblpane, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panlStockLayout.createSequentialGroup()
                        .addComponent(btnAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnUpdateStock, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnDeleteStock, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        panlStockLayout.setVerticalGroup(
            panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlStockLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStockSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(stocktblpane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteStock, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateStock, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tabPaneStock.addTab("Stock", panlStock);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(tabPaneStock, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPaneStock, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProductAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductAddActionPerformed
        //Add button in Product view
        ProductAdd productAdd = new ProductAdd(this, true, this);
        productAdd.setVisible(true);
        productController.getAllProducts(modelProduct);
        checkBtnProduct();
    }//GEN-LAST:event_btnProductAddActionPerformed

    private void tblRepairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRepairMouseClicked
        // TODO add your handling code here:
        checkBtnRepair();
    }//GEN-LAST:event_tblRepairMouseClicked

    private void txtRepairSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepairSearchKeyReleased
        // TODO add your handling code here:
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(modelRepair);
        tblRepair.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtRepairSearch.getText()));
        checkBtnRepair();
//        in here "?!" act as "like" operator in sql 

    }//GEN-LAST:event_txtRepairSearchKeyReleased

    private void btnAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStockActionPerformed
        //Add button in Stock view
        StockAdd stockAdd = new StockAdd(this, true, this);
        stockAdd.setVisible(true);
        stockController.getAllStock(modelStock);
        checkBtnStock();
    }//GEN-LAST:event_btnAddStockActionPerformed

    private void txtStockSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockSearchKeyReleased
        // TODO add your handling code here:
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(modelStock);
        tblStock.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtStockSearch.getText()));
        checkBtnRepair();
//        in here "?!" act as "like" operator in sql 

    }//GEN-LAST:event_txtStockSearchKeyReleased

    private void txtProductSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductSearchKeyReleased
        // TODO add your handling code here:
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(modelProduct);
        tblProduct.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtProductSearch.getText()));
        checkBtnProduct();
//        in here "?!" act as "like" operator in sql 

    }//GEN-LAST:event_txtProductSearchKeyReleased

    private void btnProductUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductUpdateActionPerformed
/*
        int selectedRow = tblProduct.convertRowIndexToModel(tblProduct.getSelectedRow());
        int ProductId = Integer.valueOf(modelProduct.getValueAt(selectedRow, 0).toString());
        product = productController.findProductById(ProductId);
        String supName = product.getSupplierRef().toString();
        ProductUpdate productUpdate = new ProductUpdate(null, rootPaneCheckingEnabled);
        productUpdate.setProductUpdate(product, supName);
        productUpdate.setVisible(true);
        productController.getAllProducts(modelProduct);
        checkBtnProduct();
        txtProductSearch.requestFocus();
*/      ProductUpdate productUpdate = new ProductUpdate(this, true);
        Product product = new Product();
        int selectedRow = tblProduct.convertRowIndexToModel(tblProduct.getSelectedRow());
        //JOptionPane.showMessageDialog(rootPane, "Selected row :"+selectedRow);
        int ProductId = Integer.valueOf(modelProduct.getValueAt(selectedRow, 0).toString());
        
        //JOptionPane.showMessageDialog(rootPane, "ProductId :"+ProductId);
        product = productController.findProductById(ProductId);
        //JOptionPane.showMessageDialog(rootPane, "product:"+product);
        
        Supplier supplier1=new Supplier();
        SupplierController supplierController=new SupplierController();
        supplier1=supplierController.findSupplierById(1);
        
        
        
       /* Supplier supplier=product.getSupplierRef();
        JOptionPane.showMessageDialog(rootPane, "Supplier NAme:"+supplier);
        String supName = product.getSupplierRef().getSupplerName();
        JOptionPane.showMessageDialog(rootPane, "Supplier NAme:"+supName);*/
        //product.setSupplierRef(modelProduct.getValueAt(selectedRow, 1).toString());
        //product.setSupplierRef(modelProduct.getValueAt(selectedRow, 1).toString());
        //   product.setProductName(modelProduct.getValueAt(selectedRow, 2).toString());
        //   product.setProductType(modelProduct.getValueAt(selectedRow, 3).toString());
        //   product.setProductPrice(modelProduct.getValueAt(selectedRow, 4).toString());
        //productUpdate.setProductUpdate();
        productUpdate.setProductUpdate(product, supplier1.getSupplerName());
        productUpdate.setVisible(true);
        productController.getAllProducts(modelProduct);
        checkBtnProduct();
        txtProductSearch.requestFocus();


    }//GEN-LAST:event_btnProductUpdateActionPerformed

    private void btnUpdateStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStockActionPerformed
        /*
        StockUpdate stockUpdate=new StockUpdate(this, true);
        int selectedRow = tblStock.convertRowIndexToModel(tblStock.getSelectedRow());
        int supplierId = Integer.valueOf(modelStock.getValueAt(selectedRow, 0).toString());
        JOptionPane.showMessageDialog(rootPane, "ID :"+supplierId);
        stockUpdate.setStockUpdate(supplierId);
         
        stockUpdate.setVisible(true);
        */
/*
        int selectedRow = tblStock.convertRowIndexToModel(tblStock.getSelectedRow());

        StockUpdate stockUpdate = new StockUpdate(this, true);
        Stock stock = new Stock();
        stock.setStockId(Integer.valueOf(modelStock.getValueAt(selectedRow, 0).toString()));
        int productId = Integer.valueOf(modelStock.getValueAt(selectedRow, 1).toString());
        JOptionPane.showMessageDialog(rootPane, "ID :" + productId);
        String productName = (modelStock.getValueAt(selectedRow, 2).toString());
        JOptionPane.showMessageDialog(rootPane, "PRODUCT NAME :" + productName);

        //stockUpdate.setStockUpdate(supplierId);
        //stock.setProductRef.setProductId(modelStock.getValueAt(selectedRow, 1).toString());
        //**********PRODUCCT ID***********************************
        //***************PRODUCT NAME****************************
        
        stock.setQuantity(modelStock.getValueAt(selectedRow, 3).toString());
        stock.setStockMrp(modelStock.getValueAt(selectedRow, 4).toString());
        stock.setStockDiscount(modelStock.getValueAt(selectedRow, 5).toString());
        //stockUpdate.setStockUpdate(stock);
        stockUpdate.setStockUpdate();
        stockUpdate.setVisible(true);
        stockController.getAllStock(modelStock);
        checkBtnStock();
        txtStockSearch.requestFocus();
*/
        StockUpdate stockUpdate = new StockUpdate(this, true);
        Stock stock = new Stock();
        int selectedRow = tblStock.convertRowIndexToModel(tblStock.getSelectedRow());
        //JOptionPane.showMessageDialog(rootPane, "Selected row :"+selectedRow);
        int StockId = Integer.valueOf(modelStock.getValueAt(selectedRow, 0).toString());
        
        //JOptionPane.showMessageDialog(rootPane, "ProductId :"+ProductId);
        stock = stockController.findStockById(StockId);
        //JOptionPane.showMessageDialog(rootPane, "product:"+product);
        
        Product product1=new Product();
        ProductController productController=new ProductController();
        product1=productController.findProductById(1);
        stockUpdate.setStockUpdate(stock, product1.getProductId(),product1.getProductName());
        stockUpdate.setVisible(true);
        stockController.getAllStock(modelStock);
        checkBtnStock();
        txtStockSearch.requestFocus();

        

    }//GEN-LAST:event_btnUpdateStockActionPerformed

    private void btnDeleteStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStockActionPerformed
        //Delete button action
        int status = JOptionPane.showConfirmDialog(this, "Do you want to delete the Stocks ?", "Delete Stock", JOptionPane.YES_NO_OPTION);
        if (status == JOptionPane.YES_OPTION) {
            int selectedRow = tblStock.convertRowIndexToModel(tblStock.getSelectedRow());
            int stockId = Integer.valueOf(modelStock.getValueAt(selectedRow, 0).toString());
            Stock stock = stockController.findStockById(stockId);
            stock.setStatus(false);
            stock.setDeletedAt(new Date());
            if (stockController.update(stock)) {
                modelStock.removeRow(selectedRow);
                checkBtnStock();
                JOptionPane.showMessageDialog(this, "Stocks deleted successfully.", "Deletion Message", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error in deleting Stocks.", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }
        txtStockSearch.requestFocus();


    }//GEN-LAST:event_btnDeleteStockActionPerformed

    private void tblStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStockMouseClicked
        // TODO add your handling code here:
        checkBtnStock();
    }//GEN-LAST:event_tblStockMouseClicked

    private void btnRepairUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepairUpdateActionPerformed
        //Update button action
        int selectedRow = tblRepair.convertRowIndexToModel(tblRepair.getSelectedRow());

        RepairUpdate repairUpdate = new RepairUpdate(this, true);
        Repair repair = new Repair();
        repair.setRepairId(Integer.valueOf(modelRepair.getValueAt(selectedRow, 0).toString()));
        repair.setRepairName(modelRepair.getValueAt(selectedRow, 1).toString());
        repair.setRepairPhone(modelRepair.getValueAt(selectedRow, 2).toString());
        repair.setRepairSubmitdate(modelRepair.getValueAt(selectedRow, 3).toString());
        repair.setRepairDuedate(modelRepair.getValueAt(selectedRow, 4).toString());
        repair.setRepairNotes(modelRepair.getValueAt(selectedRow, 5).toString());
        repairUpdate.setRepairUpdate(repair);
        repairUpdate.setVisible(true);
        repairController.getAllRepair(modelRepair);
        checkBtnRepair();
        txtRepairSearch.requestFocus();

    }//GEN-LAST:event_btnRepairUpdateActionPerformed

    private void btnAddRepairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRepairActionPerformed
        //Pop up the Repair Add form
        RepairAdd repairAdd = new RepairAdd(this, true, this);
        repairAdd.setVisible(true);
        repairController.getAllRepair(modelRepair);
        checkBtnRepair();

    }//GEN-LAST:event_btnAddRepairActionPerformed

    private void btnRepairDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepairDeleteActionPerformed
        // Delete button action 

        int status = JOptionPane.showConfirmDialog(this, "Do you want to delete these Repair Details ?", "Delete Repair Details", JOptionPane.YES_NO_OPTION);
        if (status == JOptionPane.YES_OPTION) {
            int selectedRow = tblRepair.convertRowIndexToModel(tblRepair.getSelectedRow());
            int repairId = Integer.valueOf(modelRepair.getValueAt(selectedRow, 0).toString());
            Repair repair = repairController.findRepairById(repairId);
            repair.setStatus(false);
            repair.setDeletedAt(new Date());
            if (repairController.update(repair)) {
                modelRepair.removeRow(selectedRow);
                checkBtnRepair();
                JOptionPane.showMessageDialog(this, "Repair Details deleted successfully.", "Deletion Message", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error in deleting Repair Details.", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }
        txtRepairSearch.requestFocus();

    }//GEN-LAST:event_btnRepairDeleteActionPerformed

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        checkBtnProduct();
    }//GEN-LAST:event_tblProductMouseClicked

    private void btnProductDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductDeleteActionPerformed
        //Delete buttton action

        int status = JOptionPane.showConfirmDialog(this, "Do you want to delete these product Details ?", "Delete Product", JOptionPane.YES_NO_OPTION);
        if (status == JOptionPane.YES_OPTION) {
            int selectedRow = tblProduct.convertRowIndexToModel(tblProduct.getSelectedRow());
            int productId = Integer.valueOf(modelProduct.getValueAt(selectedRow, 0).toString());
            Product product = productController.findProductById(productId);
            product.setStatus(false);
            product.setDeletedAt(new Date());
            if (productController.update(product)) {
                modelProduct.removeRow(selectedRow);
                checkBtnProduct();
                JOptionPane.showMessageDialog(this, "Product deleted Successfully.", "Deletion Message", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error in Deleting Product.", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }
        txtProductSearch.requestFocus();

    }//GEN-LAST:event_btnProductDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                StockView dialog = new StockView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRepair;
    private javax.swing.JButton btnAddStock;
    private javax.swing.JButton btnDeleteStock;
    private javax.swing.JButton btnProductAdd;
    private javax.swing.JButton btnProductDelete;
    private javax.swing.JButton btnProductUpdate;
    private javax.swing.JButton btnRepairDelete;
    private javax.swing.JButton btnRepairUpdate;
    private javax.swing.JButton btnUpdateStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panlProduct;
    private javax.swing.JPanel panlRepair;
    private javax.swing.JPanel panlStock;
    private javax.swing.JScrollPane productTablePane;
    private javax.swing.JScrollPane stocktblpane;
    private javax.swing.JTabbedPane tabPaneStock;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTable tblRepair;
    private javax.swing.JTable tblStock;
    private javax.swing.JTextField txtProductSearch;
    private javax.swing.JTextField txtRepairSearch;
    private javax.swing.JTextField txtStockSearch;
    // End of variables declaration//GEN-END:variables

    private void checkBtnRepair() {
        if (tblRepair.getSelectedRowCount() > 0) {
            btnRepairDelete.setEnabled(true);
            btnRepairUpdate.setEnabled(true);
        } else {
            btnRepairDelete.setEnabled(false);
            btnRepairUpdate.setEnabled(false);
        }
    }

    private void checkBtnStock() {
        if (tblStock.getSelectedRowCount() > 0) {
            btnDeleteStock.setEnabled(true);
            btnUpdateStock.setEnabled(true);
        } else {
            btnDeleteStock.setEnabled(false);
            btnUpdateStock.setEnabled(false);
        }
    }

    private void checkBtnProduct() {
        if (tblProduct.getSelectedRowCount() > 0) {
            btnProductDelete.setEnabled(true);
            btnProductUpdate.setEnabled(true);
        } else {
            btnProductDelete.setEnabled(false);
            btnProductUpdate.setEnabled(false);
        }
    }
}
