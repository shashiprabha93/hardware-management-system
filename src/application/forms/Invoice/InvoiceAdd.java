/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.forms.Invoice;

import Controller.CustomerController;
import Controller.InvoiceController;
import Controller.ProductController;
import application.entity.Customer;
import application.entity.Payment;
import application.entity.Product;
import application.entity.Invoice;
import application.entity.InvoiceDetails;
import application.entity.Rental;
import application.entity.RentalDetails;
import application.forms.Customer.CustomerAdd;
import hardwaremanagement.NumbeFormater;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.NumberFormatter;
import hardwaremanagement.ComboSearch;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author User
 */
public class InvoiceAdd extends javax.swing.JDialog {
    

    private DefaultComboBoxModel comboBoxModelCustomer;
    private final ComboSearch cs;
    //private RentalView rentalView;

    private CustomerController customerController;
    private InvoiceController invoiceController;
    private ProductController productController = null;

    private DefaultTableModel tableModelInvoiceAdd, tableModelInvoiceRemove;
    private TableColumnModel tcmInvoiceAdd, tcmInvoiceRemove;
    private TableColumn colProductIdAdd, colProductIdRemove;
    private ArrayList<String> productList;
    


    /**
     * Creates new form InvoiceAdd
     */
    public InvoiceAdd(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);

        customerController = new CustomerController();
        invoiceController = new InvoiceController();
        comboBoxModelCustomer = (DefaultComboBoxModel) cmbCustomer1.getModel();
        customerController.getAllCustomerForCombo(comboBoxModelCustomer);
        cs = new ComboSearch<Customer>();
        cs.setSearchableCombo(cmbCustomer1, true, "No matching result");
        cmbCustomer1.getEditor().selectAll();

        productController = new ProductController();
        tableModelInvoiceAdd = (DefaultTableModel) tblInvoiceAdd.getModel();
        tableModelInvoiceRemove = (DefaultTableModel) tblInvoiceRemove.getModel();
        productController.getAllProducts(tableModelInvoiceAdd);
        productList = new java.util.ArrayList<String>();
                
        tcmInvoiceAdd = tblInvoiceAdd.getColumnModel();
        colProductIdAdd = tcmInvoiceAdd.getColumn(0);
        tcmInvoiceAdd.removeColumn(colProductIdAdd);

        tcmInvoiceRemove = tblInvoiceRemove.getColumnModel();
        colProductIdRemove = tcmInvoiceRemove.getColumn(0);
        tcmInvoiceRemove.removeColumn(colProductIdRemove);

        tableModelInvoiceRemove.addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
               calculateTotal();
               
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        btnSave = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPaidAmount = new javax.swing.JTextField();
        btnCheckout = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNetTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        datePickerCheckout = new com.toedter.calendar.JDateChooser();
        btnCalc = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInvoiceRemove = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtQuntity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvoiceAdd = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbCustomer1 = new javax.swing.JComboBox<>();
        btnCustomerAdd = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel9.setText("Balance");

        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });

        jLabel7.setText("Cash");

        txtPaidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidAmountActionPerformed(evt);
            }
        });

        btnCheckout.setText("Check Out");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        jLabel6.setText("Net Total");

        jLabel8.setText("Sub Discount");

        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });

        jLabel5.setText(" Gross Total");

        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel10.setText("Check Out");

        btnCalc.setText("Calculate");
        btnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove Item");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        tblInvoiceRemove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product Name", "Product Type", "Unit Price (Rs.)", "Qty"
            }
        ));
        jScrollPane2.setViewportView(tblInvoiceRemove);

        jLabel4.setText("Remove Invoice");

        jLabel3.setText("Quentity");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblInvoiceAdd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product Name", "Product Type", "Unit Price (Rs.)"
            }
        ));
        jScrollPane1.setViewportView(tblInvoiceAdd);

        jLabel2.setText("Add Invoice");

        jLabel1.setText("Customer");

        cmbCustomer1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCustomer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomer1ActionPerformed(evt);
            }
        });

        btnCustomerAdd.setLabel("New Customer");
        btnCustomerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerAddActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel11.setText("Search");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(44, 651, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(panel1Layout.createSequentialGroup()
                                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                                .addComponent(txtDiscount)
                                                .addComponent(txtNetTotal))
                                            .addGap(18, 18, 18)
                                            .addComponent(btnCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panel1Layout.createSequentialGroup()
                                            .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                            .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(panel1Layout.createSequentialGroup()
                                        .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(25, 25, 25)
                                .addComponent(datePickerCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemove))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(31, 31, 31)
                                .addComponent(txtQuntity, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel1Layout.createSequentialGroup()
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addGroup(panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbCustomer1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(btnCustomerAdd)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(25, 25, 25))))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCustomer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCustomerAdd)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(datePickerCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalc))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)))
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckout))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiscountActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (tblInvoiceAdd.getSelectedRow() > -1) {

            int selectedRow = tblInvoiceAdd.convertRowIndexToModel(tblInvoiceAdd.getSelectedRow());
            if (!NumbeFormater.isNumeric(txtQuntity.getText())) {
                JOptionPane.showMessageDialog(this, "Invalid Quntity.", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (Integer.parseInt(txtQuntity.getText()) < 1 && txtQuntity.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Quantity cannot be Zero (0).", "Warning Message", JOptionPane.WARNING_MESSAGE);

            } else if (productList.contains(tableModelInvoiceAdd.getValueAt(selectedRow, 0).toString())) {
                JOptionPane.showMessageDialog(this, "Product already Added.", "Error Message", JOptionPane.ERROR_MESSAGE);

            } else {

                int productId = Integer.valueOf(tableModelInvoiceAdd.getValueAt(selectedRow, 0).toString());
                String productName = tableModelInvoiceAdd.getValueAt(selectedRow, 1).toString();
                String productType = tableModelInvoiceAdd.getValueAt(selectedRow, 2).toString();
                double buyingPrice = NumbeFormater.formatCleanString(tableModelInvoiceAdd.getValueAt(selectedRow, 3).toString());
                int qty = Integer.valueOf(txtQuntity.getText());

                productList.add(tableModelInvoiceAdd.getValueAt(selectedRow, 0).toString());
                tableModelInvoiceRemove.addRow(new Object[]{productId, productName, productType, NumbeFormater.formatDoubleToDecimal(buyingPrice), qty});

                txtQuntity.setText("0");
                tblInvoiceAdd.clearSelection();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a Product.", "Error Message", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = tblInvoiceRemove.getSelectedRow();
        if (selectedRow > -1) {
            productList.remove(tableModelInvoiceRemove.getValueAt(selectedRow, 0).toString());
            tableModelInvoiceRemove.removeRow(tblInvoiceRemove.getSelectedRow());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a row.", "Warning Message", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
      if (tblInvoiceRemove.getRowCount() > 0) {

            if (cmbCustomer1.getSelectedItem() instanceof Customer) {

                if (datePickerCheckout.getDate() != null) {

                    Date date = new Date();
                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY-MM-dd");
                    Date fromDate = datePickerCheckout.getDate();

                    Invoice invoice = new Invoice();
                    invoice.setCustomerRef((Customer) cmbCustomer1.getSelectedItem());
                    invoice.setInvoiceCheckin(date);
                    invoice.setInvoiceCheckout(fromDate);
                    invoice.setUpdatedAt(date);
                    invoice.setCreatedAt(date);
                    invoice.setStatus(true);

                    List<InvoiceDetails> invoiceDetails = new ArrayList<InvoiceDetails>();

                    for (int i = 0; i < tableModelInvoiceRemove.getRowCount(); i++) {

                        Product product = new Product();
                        product.setProductId(Integer.parseInt(tableModelInvoiceRemove.getValueAt(i, 0).toString()));

                        InvoiceDetails ivoice_Details = new InvoiceDetails();

                        ivoice_Details.setProductRef(product);
                        ivoice_Details.setQty(Integer.parseInt(tableModelInvoiceRemove.getValueAt(i, 4).toString()));
                        ivoice_Details.setCreatedAt(date);
                        ivoice_Details.setUpdatedAt(date);
                        ivoice_Details.setStatus(true);
                        invoiceDetails.add(ivoice_Details);
                        invoice.setInvoiceDetailsList(invoiceDetails);

                    }

                    Payment payment = new Payment();
                    payment.setTotalAmount(NumbeFormater.formatCleanString(txtTotal.getText()));
                    payment.setPaidAmount(Double.parseDouble(txtPaidAmount.getText()));
                    //payment.setBalance(NumbeFormater.formatCleanString(txtBalance.getText()));
                    payment.setCreatedAt(date);
                    payment.setUpdatedAt(date);
                    payment.setStatus(true);
                    invoice.setPaymentRef(payment);

                    boolean status = invoiceController.saveInvoiceDetais(invoice);
                    if (status) {
                        JOptionPane.showMessageDialog(this, "RENTAl added successfully.", "Success Message", JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                        //rentalController.getAllRental(rentalView.modelRentalView);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error in adding RENTAL.", "Error Message", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                     JOptionPane.showMessageDialog(null, "Please set date range correctly...!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Customer.", "Warning Message", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Invoice must has at least one product.", "Warning Message", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
       final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableModelInvoiceAdd);
        tblInvoiceAdd.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtSearch.getText()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnCustomerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerAddActionPerformed
        CustomerAdd customerAdd = new CustomerAdd(this, rootPaneCheckingEnabled, null);
        customerAdd.setVisible(true);
        customerController.getAllCustomerForCombo(comboBoxModelCustomer);
    }//GEN-LAST:event_btnCustomerAddActionPerformed

    private void btnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcActionPerformed
        double totDiscount;
        totDiscount = NumbeFormater.formatCleanString(txtDiscount.getText());
        double subTotal = 0;
        subTotal = NumbeFormater.formatCleanString(txtTotal.getText());
        double netTotal = subTotal-totDiscount;
        txtNetTotal.setText(NumbeFormater.formatDoubleToDecimal(netTotal));
    }//GEN-LAST:event_btnCalcActionPerformed

    private void txtPaidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaidAmountActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        calculateBalance();
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void cmbCustomer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomer1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomer1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InvoiceAdd dialog = new InvoiceAdd(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCalc;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnCustomerAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbCustomer1;
    private com.toedter.calendar.JDateChooser datePickerCheckout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Panel panel1;
    private javax.swing.JTable tblInvoiceAdd;
    private javax.swing.JTable tblInvoiceRemove;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtNetTotal;
    private javax.swing.JTextField txtPaidAmount;
    private javax.swing.JTextField txtQuntity;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    
    private double calculateTotal() {

        double totalAmount = 0;
        for (int i = 0; i < tableModelInvoiceRemove.getRowCount(); i++) {
            double Qty = NumbeFormater.formatCleanString(tableModelInvoiceRemove.getValueAt(i, 4).toString());
            double unitPrice = NumbeFormater.formatCleanString(tableModelInvoiceRemove.getValueAt(i, 3).toString());
            totalAmount += unitPrice * Qty;

        }
        txtTotal.setText(NumbeFormater.formatDoubleToDecimal(totalAmount));
        return totalAmount;
    }

    private double calculateBalance() {
        double totBalance = 0;
        double paidAmount = 0;
        double total = NumbeFormater.formatCleanString(txtNetTotal.getText());
        if(txtPaidAmount.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Please Enter Paid Amount", "Error Message", JOptionPane.ERROR_MESSAGE);
           
        }
        double cash = NumbeFormater.formatCleanString(txtPaidAmount.getText());
        if (!txtPaidAmount.getText().isEmpty()) {
                if (cash<total) {
                 JOptionPane.showMessageDialog(this, "Paid amount cannot be less than total amount", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }
                   double balance = cash - total;
                   txtBalance.setText(NumbeFormater.formatDoubleToDecimal(balance));
                        
            
            
        return balance;
        
    }

    
}
